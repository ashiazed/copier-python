FROM python:{{ python_version }}-slim

# Use uv binary
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Set environment variables
ARG ENVIRONMENT=production
ENV ENVIRONMENT=${ENVIRONMENT}

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

ENV UV_PROJECT_ENVIRONMENT=/opt/venv \
    UV_VENV=/opt/venv \
    UV_LINK_MODE=copy \
    UV_COMPILE_BYTECODE=1 \
    UV_PYTHON_DOWNLOADS=never

# Install make so we can use Makefile commands inside the container
RUN apt-get update && apt-get install -y make && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install dependencies from lock file
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    bash -euxc '\
        if [ "$ENVIRONMENT" = "production" ]; then \
            uv sync --locked --no-dev; \
        else \
            uv sync --locked --extra dev; \
        fi'

# Copy project files after dependencies are installed
COPY pyproject.toml uv.lock Makefile /app/
COPY src /app/src
COPY tests /app/tests

# Set Python path for inside-container resolution
ENV PYTHONPATH=/app/src
ENV PATH="/opt/venv/bin:$PATH"
